#!/usr/bin/env bash

ttabBin="../bin/ttab"

# Construct a broken shell command that will cause a syntax error in `ttab` itself. 
cmdThatCausesSyntaxError='I am " broken'

# NOTE: The best `ttab` can do is to create the target tab / window with a *syntactically*
#       valid shell command, but it can't meaningfully act on that valid command's runtime failure.
#       However, a *syntactically invalid* shell command causes an error in `ttab` itself,
#       which it SHOULD reflect in its exit code.  

"$ttabBin" -w "$cmdThatCausesSyntaxError" 2>/dev/null && { echo "Invalid-syntax command '$cmdThatCausesSyntaxError' should have resulted in nonzero exit code, but didn't." >&2; exit 1; } 

exit 0
