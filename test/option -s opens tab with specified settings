#!/usr/bin/env osascript

# Note: For most tests, we create the new tab in the front window, both because that is ttab's core feature (a simple `do script` without a target will open a tab in a new window).
#       Also, opening new tabs in the front window is less visually disruptive.
#       Note that while the tests terminate the new tab's shell, the tab may stay open, depending on its settings.

set ttabBin to "../bin/ttab"

tell application "Terminal"'s front window
    
  set tabCountBefore to count of tabs
  set thisTab to selected tab

  set settingsName to "ocean"

  # Create tab with settings.
  do shell script ttabBin & " -s " & quoted form of settingsName

  if not (count of tabs) > tabCountBefore then error "Failed to create tab in front window."

  # Ensure that the desired settings are in effect.
  if name of (current settings of selected tab) â‰  settingsName then
    set selected tab to thisTab # Re-select the previously active tab so that the error message shows.
    error "New tab doesn't have the expected settings, " & settingsName & "."
  end if

  # Tabs don't understand `close`, but `do script "exit"` is preferable anyway (assuming the settings close the tab once the shell exits),
  # because it waits for the tab to be ready to process the command.
  do script "exit" in selected tab
  set selected tab to thisTab # Re-select the previously active tab

end tell

return
